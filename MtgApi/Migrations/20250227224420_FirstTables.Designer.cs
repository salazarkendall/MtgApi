// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MtgApi.Models;

#nullable disable

namespace MtgApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250227224420_FirstTables")]
    partial class FirstTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MtgApi.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("MtgApi.Models.Cards_Colors", b =>
                {
                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.HasKey("CardId", "ColorId");

                    b.HasIndex("ColorId");

                    b.ToTable("Cards_Colors");
                });

            modelBuilder.Entity("MtgApi.Models.Cards_Subtypes", b =>
                {
                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("SubtypeId")
                        .HasColumnType("int");

                    b.HasKey("CardId", "SubtypeId");

                    b.HasIndex("SubtypeId");

                    b.ToTable("Card_Subtypes");
                });

            modelBuilder.Entity("MtgApi.Models.Cards_Types", b =>
                {
                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("CardId", "TypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("Cards_Types");
                });

            modelBuilder.Entity("MtgApi.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("MtgApi.Models.Subtype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SubtypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Subtype");
                });

            modelBuilder.Entity("MtgApi.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("MtgApi.Models.Cards_Colors", b =>
                {
                    b.HasOne("MtgApi.Models.Card", "Card")
                        .WithMany("Cards_Colors")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MtgApi.Models.Color", "Color")
                        .WithMany("Cards_Colors")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Color");
                });

            modelBuilder.Entity("MtgApi.Models.Cards_Subtypes", b =>
                {
                    b.HasOne("MtgApi.Models.Card", "Card")
                        .WithMany("Cards_Subtypes")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MtgApi.Models.Subtype", "Subtype")
                        .WithMany("Cards_Subtypes")
                        .HasForeignKey("SubtypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Subtype");
                });

            modelBuilder.Entity("MtgApi.Models.Cards_Types", b =>
                {
                    b.HasOne("MtgApi.Models.Card", "Card")
                        .WithMany("Cards_Types")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MtgApi.Models.Type", "Type")
                        .WithMany("Cards_Types")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("MtgApi.Models.Card", b =>
                {
                    b.Navigation("Cards_Colors");

                    b.Navigation("Cards_Subtypes");

                    b.Navigation("Cards_Types");
                });

            modelBuilder.Entity("MtgApi.Models.Color", b =>
                {
                    b.Navigation("Cards_Colors");
                });

            modelBuilder.Entity("MtgApi.Models.Subtype", b =>
                {
                    b.Navigation("Cards_Subtypes");
                });

            modelBuilder.Entity("MtgApi.Models.Type", b =>
                {
                    b.Navigation("Cards_Types");
                });
#pragma warning restore 612, 618
        }
    }
}
